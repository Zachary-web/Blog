# 服务器端口配置
server.port=8090

# 博客名称
blog.name=Zachary's Blog

# 博客API接口地址 - 生产环境URL https://api.naccl.top/blog
blog.api=http://localhost:${server.port}

# 博客后台管理系统地址 - 生产环境URL https://admin.naccl.top
blog.cms=http://localhost:8080

# 博客前台展示地址 - 生产环境URL https://naccl.top
blog.view=http://localhost:8081

# 数据库连接配置
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/zblog?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai
spring.datasource.username=root
spring.datasource.password=123456

# Redis缓存配置 - 单机模式
#spring.redis.host=127.0.0.1
#spring.redis.password=
#spring.redis.port=6379
#spring.redis.database=0
#spring.redis.timeout=10000ms

# MyBatis映射配置
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.configuration.map-underscore-to-camel-case=true

# 日志配置
logging.level.root=info
logging.level.top.naccl=debug
logging.file=blog-api/log/blog-dev

# JWT Token配置
# 1000 * 60 * 60 * 24 * 3 = 3天 token过期时间
token.expireTime=259200000

# JWT密钥 - 使用64位base64编码的随机字符串作为密钥
token.secretKey=2x0+HflInjRqDTu6wucLgI4sR45TKs77mF8sx/P4GS3g4gR+q80GpdkVXmsMAlknN7pJvVIkJV/dyDBJfTt9mQ==

# 评论通知渠道配置: Telegram=tg 邮件=mail (支持多种通知方式，用逗号分隔)
comment.notify.channel=mail

# 评论功能默认开启状态
comment.default-open=true

# 邮件通知配置 - 用于评论回复等邮件通知功能
# 需要配置正确的邮件服务器信息，搜索"spring mail配置"获取帮助
spring.mail.host=smtp.mxhichina.com
spring.mail.port=465
spring.mail.username=admin@example.com
spring.mail.password=123456
spring.mail.properties.mail.smtp.socketFactory.port=465
spring.mail.properties.mail.smtp.ssl.enable=true

# Telegram Bot API基础地址
tg.bot.api=https://api.telegram.org/bot

# Telegram Bot Token - 需要通过 @BotFather 获取
tg.bot.token=1234567890:qwertyuiopasdfghjklzxcvbnm

# Telegram聊天ID - 接收通知的聊天ID
tg.bot.chat-id=1234567890

# Telegram代理配置
tg.bot.use-proxy=false

# 是否使用反向代理
tg.bot.use-reverse-proxy=true

# 反向代理URL - 用于绕过网络限制访问Telegram API
tg.bot.reverse-proxy-url=https://tg-api-open.naccl.workers.dev

# HTTP代理服务器配置 (主要用于Telegram通知)
http.proxy.server.host=127.0.0.1
http.proxy.server.port=7890
http.proxy.server.timeout=10000

# 文件上传渠道配置: 本地存储:local GitHub:github 又拍云:upyun
upload.channel=local

# 本地文件上传配置
# Windows路径示例: C:/Users/nblog/Desktop/upload/ Linux路径示例:/home/nblog/upload/
upload.file.path=D:/upload
upload.file.access-path=/image/**
upload.file.resources-locations=file:${upload.file.path}

# GitHub图床配置
# GitHub token 获取地址: https://naccl.github.io/PictureHosting/#/pictureHosting/help
upload.github.token=ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
upload.github.username=Naccl

# 用于存储图片的GitHub仓库名
upload.github.repos=test

# GitHub仓库中的存储路径 以"/"开头和结尾
upload.github.repos-path=/comment/avatar

# 又拍云配置 - 参考文档: https://help.upyun.com/knowledge-base/quick_start/
upload.upyun.bucket-name=zblog

# 又拍云操作员用户名
upload.upyun.username=zachary

# 又拍云操作员密码
upload.upyun.password=xxxxxxxxxxxxxxxxxxxxxxxxxxxx

# 又拍云存储路径
upload.upyun.path=/comment/avatar

# 又拍云CDN域名
upload.upyun.domain=https://cdn.example.com

# 模板引擎配置 - 开发环境关闭缓存
spring.thymeleaf.cache=false

# 开发工具配置 - 热重启功能
spring.devtools.restart.enabled=true

# 文件上传大小限制
spring.servlet.multipart.max-file-size=15MB
spring.servlet.multipart.max-request-size=15MB

# Session超时时间配置
server.servlet.session.timeout=30m
